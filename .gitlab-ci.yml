image: debian

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build

# install libraries
before_script:
  - apt-get update
  - apt-get -y install clang cmake git libpcre2-dev libsystemd-dev
  - apt-get -y install python3 python3-pip
  - git clone https://github.com/CESNET/libyang.git
  - git clone https://github.com/sysrepo/sysrepo.git
  - git clone https://github.com/sartura/sysrepo-plugins-common.git
  - git clone https://github.com/sartura/umgmt.git
  - cd libyang; git checkout devel; mkdir build; cd build; cmake .. -DCMAKE_C_COMPILER=clang; make -j install; cd ../../
  - cd sysrepo; git checkout devel; mkdir build; cd build; cmake .. -DCMAKE_C_COMPILER=clang; make -j install; cd ../../
  - cd sysrepo-plugins-common; mkdir build; cd build; cmake .. -DCMAKE_C_COMPILER=clang; make -j install; cd ../..
  - cd umgmt; git submodule init; git submodule update;  mkdir build; cd build; cmake .. -DCMAKE_C_COMPILER=clang; make -j install; cd ../..
  - pip3 install libyang
  - pip3 install Jinja2

build:
  stage: build

  script:
    # build system plugin
    - mkdir build
    - cmake -DSYSTEMD_IFINDEX=1 -DCMAKE_C_COMPILER=clang -S . -B build/
    - make -j
  
  artifacts:
    paths:
      - build/
